name: Deploy EECE798N Project

on:
  push:
    branches: [ "main" ]
    paths:
      - '**'  # Monitor all directories
  workflow_dispatch:

env:
  DOCKERHUB_REPO_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/eece798n
  PROJECT_DIR: .  # Changed to root directory

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Interview-Questions',
          'CV-Format',
          'Evaluate-Answers',
          'backend',
          'cv-job-matching',
          'frontend',
          'job-description'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}  # Directly access service directories
        docker build -t ${{ env.DOCKERHUB_REPO_PREFIX }}-$(echo "${{ matrix.service }}" | tr ' ' '-' | tr '[:upper:]' '[:lower:]'):${{ github.sha }} .
        docker push ${{ env.DOCKERHUB_REPO_PREFIX }}-$(echo "${{ matrix.service }}" | tr ' ' '-' | tr '[:upper:]' '[:lower:]'):${{ github.sha }}
  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-federated-identity: true

    - name: Get AKS credentials
      run: |
        az aks get-credentials \
          --name Test \
          --resource-group Test_Group \
          --overwrite-existing

    
    - name: Deploy to AKS
      run: |
        # Create namespace
        kubectl apply -f k8s/namespace.yaml --wait

        # Create database secret
        kubectl create secret generic db-secrets \
          --namespace=eece-system \
          --from-literal=root-password=${{ secrets.DB_PASSWORD }} \
          --dry-run=client -o yaml | kubectl apply -f -

        # Deploy MySQL
        kubectl apply -f k8s/database/mysql.yaml --namespace=eece-system

        # Update and deploy backend
        for service in backend frontend cv-job-matching cv-format job-description interview-questions evaluate-answers; do
          # Replace image tags in manifests
          find k8s/$service -name '*.yaml' -exec sed -i \
            -e "s/{{DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_USERNAME }}/g" \
            -e "s/{{IMAGE_TAG}}/${{ github.sha }}/g" {} \;
          
          # Apply manifests
          kubectl apply -f k8s/$service/ --namespace=eece-system
        done

   
        # Configure ingress
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          --namespace=eece-system \
          --set controller.replicaCount=2 \
          --set controller.nodeSelector."kubernetes\.io/os"=linux

        # Verify deployments
        kubectl rollout status --namespace=eece-system deployment/backend --timeout=300s
        kubectl rollout status --namespace=eece-system deployment/frontend --timeout=300s
        kubectl get all --namespace=eece-system